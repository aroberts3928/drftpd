AUTH {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doAUTH
}

CPSV {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doPASVandCPSV
perms *
}

PROT {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doPROT
perms *
}

PBSZ {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doPBSZ
perms *
}

MODE {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doMODE
perms *
}

PASV {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doPASVandCPSV
perms *
}

PORT {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doPORT
perms *
}

PRET {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doPRET
perms *
}

SSCN {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doSSCN
perms *
}


#STRU=org.drftpd.commands.dataconnection.DataConnectionHandler.doSTRU

SYST {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doSYST
perms *
}

TYPE {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doTYPE
perms *
}

RETR {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doRETR
perms *
}

REST {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doREST
perms *
}

#SITE\ RESCAN=org.drftpd.commands.DataConnectionHandler

SITE XDUPE {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doSITE_XDUPE
perms *
help Command not implemented
}

STOR {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doSTOR
perms *
}

#EPSV=org.drftpd.commands.DataConnectionHandler
#EPRT=org.drftpd.commands.DataConnectionHandler

IDNT {
plugin org.drftpd.commands.login
class LoginHandler
method doIDNT
}

USER {
plugin org.drftpd.commands.login
class LoginHandler
method doUSER
}

PASS {
plugin org.drftpd.commands.login
class LoginHandler
method doPASS
}

QUIT {
plugin org.drftpd.commands.login
class LoginHandler
method doQUIT
}

LIST {
plugin org.drftpd.commands.list
class LIST
method doLIST
perms *
}

MLST {
plugin org.drftpd.commands.list
class MLST
method doMLSTandMLSD
perms *
}

MLSD {
plugin org.drftpg.commands.list
class MLST
method doMLSTandMLSD
perms *
}

CDUP {
plugin org.drftpd.commands.dir
class Dir
method doCDUP
perms *
}

CWD {
plugin org.drftpd.commands.dir
class Dir
method doCWD
perms *
}

MKD {
plugin org.drftpd.commands.dir
class Dir
method doMKD
perms *
}

PWD {
plugin org.drftpd.commands.dir
class Dir
method doPWD
perms *
}

RMD {
plugin org.drftpd.commands.dir
class Dir
method doRMD
perms *
}

RNFR {
plugin org.drftpd.commands.dir
class Dir
method doRNFR
perms *
}

RNTO {
plugin org.drftpd.commands.dir
class Dir
method doRNTO
perms *
}

DELE {
plugin org.drftpd.commands.dir
class Dir
method doDELE
perms *
}

SITE WIPE {
plugin org.drftpd.commands.dir
class Dir
method doSITE_WIPE
perms =wipe
help Deletes files without removing credits.
help.specific ${command} [-r] <file/dir>
help.specific Deletes files without removing credits. -r means delete recursively.
}

SITE CHOWN {
plugin org.drftpd.commands.dir
class Dir
method doSITE_CHOWN
perms =siteop
help Changes ownership of a file/directory.
help.specific ${command} <user>[.<group>] <file>
help.specific Changes ownership of a file/directory.
}

#collides with SITE CHGRP defined by UserManagement
#SITE\ CHGRP=org.drftpd.commands.Dir

SITE LINK  {
plugin org.drftpd.commands.dir
class Dir
method doSITE_LINK
perms =siteop
help Creates a symbolic link.
help.specific ${command} <target> <linkname>
help.specific Creates a symbolic link.
}

XCRC {
plugin org.drftpd.commands.dir
class Dir
method doXCRC
perms *
}

MDTM {
plugin org.drftpd.commands.dir
class Dir
method doMDTM
perms *
}

SIZE {
plugin org.drftpd.commands.dir
class Dir
method doSIZE
perms *
}

SITE SLAVES {
plugin org.drftpd.commands.slavemanagement
class SlaveManagement
method doSITE_SLAVES
perms *
help List the slave added to the site and the status of each.
help.specific ${command}
help.specific List the slave added to the site and the status of each.
}

SITE REMERGE {
plugin org.drftpd.commands.slavemanagement
class SlaveManagement
method doSITE_REMERGE
perms =siteop
help Rebuilds the file database of the specified slave.
help.specific ${command} <SLAVENAME>
help.specific Rebuilds the file database of the specified slave.
}

SITE KICKSLAVE {
plugin org.drftpd.commands.slavemanagement
class SlaveManagement
method doSITE_KICKSLAVE
perms =siteop
help Kick a slave offline.
help.specific ${command} <SLAVENAME>
help.specific Kicks the specified slave offline.
}

SITE SLAVE {
plugin org.drftpd.commands.slavemanagement
class SlaveManagement
method doSITE_SLAVE
perms *
help Show or modify information about a specific slave.
help.specific ${command} <SLAVENAME>
help.specific Show the stored information set on the specified slave.
help.specific ${command} <SLAVENAME> SET <key> <value>
help.specific Add any information you want to the slave.
help.specific ${command} <SLAVENAME> UNSET <key>
help.specific Remove any information you want from the slave.
help.specific ${command} <SLAVENAME> ADDMASK <ident@host>
help.specific Add a host mask that the specified slave is allowed to connect from.
help.specific ${command} <SLAVENAME> DELMASK <ident@host>
help.specific Remove a host mask that the specified slave is allowed to connect from.
}

SITE ADDSLAVE {
plugin org.drftpd.commands.slavemanagement
class SlaveManagement
method doSITE_ADDSLAVE
perms =siteop
help Add a slave to the site.
help.specific ${command} <SLAVENAME>
help.specific Add the specified slave to the site.
help.specific Note: Be sure to use SITE SLAVE <SLAVENAME> ADDMASK <ident@host>
help.specific to allow the slave to connect
}

SITE DELSLAVE {
plugin org.drftpd.commands.slavemanagement
class SlaveManagement
method doSITE_DELSLAVE
perms =siteop
help Remove a slave from the site.
help.specific ${command} <SLAVENAME>
help.specific Remove the specified slave from the site.
}

SITE SLAVESELECT {
plugin org.drftpd.commands.slavemanagement
class SlaveManagement
method doSITE_SLAVESELECT
perms *
help Gives the value of each slave for your current SlaveSelection config
help.specific ${command} <TYPE> </FULLPATH>
help.specific <TYPE> is one of up,down,jobdown,jobup
help.specific </FULLPATH> needs to start with "/" should not exist
}

SITE RELOAD {
plugin org.drftpd.commands.sitemanagement
class SiteManagementHandler
method doSITE_RELOAD
perms =siteop
help Reload the config files
help.specific ${command}
help.specific Reload the config files
}

SITE SHUTDOWN {
plugin org.drftpd.commands.sitemanagement
class SiteManagementHandler
method doSITE_SHUTDOWN
perms =siteop
help Shutdown the ftp server
help.specific ${command}
help.specific Shutdown the ftp server
}

SITE LIST {
plugin org.drftpd.commands.sitemanagement
class SiteManagementHandler
method doSITE_LIST
perms *
help This will raw list files in the current directory
help.specific ${command}
help.specific This will raw list files in the current directory
}

SITE LOADPLUGIN {
plugin org.drftpd.commands.sitemanagement
class SiteManagementHandler
method doSITE_LOADPLUGIN
perms =siteop
help Load a plugin
help.specific ${command} <CLASS>
help.specific Load a plugin
help.specific <CLASS> - can be either the class name if the class is in org.drftpd.plugins or the full class name
}

SITE UNLOADPLUGIN {
plugin org.drftpd.commands.sitemanagement
class SiteManagementHandler
method doSITE_UNLOADPLUGIN
perms =siteop
help Unload a plugin
help.specific ${command} <CLASS>
help.specific Unload a plugin
help.specific <CLASS> - can be either the class name if the class is in org.drftpd.plugins or the full class name
}

SITE PLUGINS {
plugin org.drftpd.commands.sitemanagement
class SiteManagementHandler
method doSITE_PLUGINS
perms =siteop
help List the currently active plugins
help.specific ${command}
help.specific List the currently active plugins
}

ABOR {
plugin org.drftpd.commands.misc
class Misc
method doABOR
perms *
}

FEAT {
plugin org.drftpd.commands.misc
class Misc
method doFEAT
perms *
}

SITE STAT {
plugin org.drftpd.commands.misc
class Misc
method doSITE_STAT
perms *
help Show simple user stats
help.specific ${command}
help.specific Show simple user stats
}
SITE TIME {
plugin org.drftpd.commands.misc
class Misc
method doSITE_TIME
perms *
help Show current server time
help.specific ${command}
help.specific Show current server time
}

SITE VERS {
plugin org.drftpd.commands.misc
class Misc
method doSITE_VERS
perms *
help Show drftpd version
help.specific ${command}
help.specific Show drftpd version
}

SITE HELP {
plugin org.drftpd.commands.misc
class Misc
method doSITE_HELP
perms *
help duh! it does this dummy!
help.specific ${command} <site cmd> will display specific information on that command
nohelp ABOR,AUTH,CDUP,CLNT,CPSV,CWD,DELE,FEAT,IDNT,LIST,MDTM,MKD,MLSD,MLST,MODE,NOOP,PASS,PASV,PBSZ,PORT,PRET,PROT,PWD,QUIT,REST,RETR,RMD,RNFR,RNTO,SIZE,SSCN,STOR,SYST,TYPE,USER,XCRC
}

SITE ADDIP {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_ADDIP
perms *
help Add a new mask to a user
help.specific ${command} <username> <ident@ip>
}

SITE ADDUSER {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_ADDUSER
perms *
help Add a new user
help.specific ${command} <user> <password> [<ident@ip#1> ...]
}

SITE CHANGE {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_CHANGE
perms *
help Change parameters for a user
help.specific ${command} <username> <field> <value>
help.specific Valid fields: group, created, ratio, idle_time, credits, tagline
help.specific num_logins # [opt perIP], comment, group_ratio #min #max
help.specific group_slots # [opt leech slots], wkly_allotment, max_sim #dn #up
}

SITE CHGRP {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_CHGRP
perms *
help Change secondary groups for a user
help.specific ${command} <user> <group> [<group> ...]
}

SITE CHPASS {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_CHPASS
perms *
help Change password for a user
help.specific ${command} <user> <password>
}

SITE DEBUG {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_DEBUG
perms *
help Allows you to see stacktraces on command errors
}

SITE DELIP {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_DELIP
perms *
help Remove a mask from a user
help.specific ${command} <user> <ident@ip> ...
}

SITE DELUSER {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_DELUSER
perms *
help Delete a user
help.specific ${command} <user> [reason]
}

SITE GADDUSER {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_ADDUSER
perms *
help Add a new user to the specified group
help.specific ${command} <group> <user> <password> [<ident@ip#1 ..]
}

SITE GINFO {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_GINFO
perms *
help Show information on a group
help.specific ${command} <group>
}

SITE GIVE {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_GIVE
perms *
help Give a user credits
help.specific ${command} <user> <bytes>
}

SITE GROUP {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_GROUP
perms *
help Change parameters for a group
help.specific ${command} <group> <field> <value>
help.specific Valid fields: ratio, num_logins # [opt perIP], max_sim #dn #up
}

SITE GROUPS {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_GROUPS
perms *
help Lists the groups on the site
}

SITE GRPREN {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_GRPREN
perms *
help Rename a group
help.specific ${command} <oldgroup> <newgroup>
}

SITE KICK {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_KICK
perms *
help Kick a users current connections to the site
help.specific ${command} <user>
}

SITE PASSWD {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_PASSWD
perms *
help Change your password
help.specific ${command} <password>
}

SITE PURGE {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_PURGE
perms *
help Permanently remove a user from the site
help.specific ${command} <username>
}

SITE READD {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_READD
perms *
help Readd a deleted user
help.specific ${command} <user>
}

SITE RENUSER {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_RENUSER
perms *
help Rename a user
help.specific ${command} <old_username> <new_username>
}

SITE SEEN {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_SEEN
perms *
help Show when a user last connected
help.specific ${command} <user>
}

SITE TAGLINE {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_TAGLINE
perms *
help Change your tagline
help.specific ${command} <tagline>
}

SITE TAKE {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_TAKE
perms *
help Remove credits from a user
help.specific ${command} <user> <bytes>
}

SITE USER {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_USER
perms *
help Show details for a user
help.specific ${command} <user>
}

SITE USERS {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_USERS
perms *
help List all usernames added to the site
}

SITE WHO {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_WHO
perms *
help Show who's online
}

SITE SWHO {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_SWHO
perms *
help Show who's online
}

SITE BAN {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_BAN
perms *
help Ban a user from logging onto the site for a specified amount of time.
help.specific ${command} <user> <minutes> [reason]
}

SITE UNBAN {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_UNBAN
perms *
help Removes a ban for the specified user.
help.specific ${command} <user>
}

SITE BANS {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_BANS
perms *
help List the current users banned on the site.
}

SITE RULES {
plugin org.drftpd.commands.textoutput
class Textoutput
method doTEXT_OUTPUT
perms *
help Displays the site rules
file text/rules.txt
}

SITE WELCOME {
plugin org.drftpd.commands.textoutput
class Textoutput
method doTEXT_OUTPUT
perms *
help Displays site welcome message
file text/welcome.txt
}

SITE REQUEST {
plugin org.drftpd.commands.request
class Request
method doSITE_REQUEST
perms *
help Add a request
help.specific ${command} <nameofrequest>
}

SITE REQFILLED {
plugin org.drftpd.commands.request
class Request
method doSITE_REQFILLED
perms *
help Fill a request
help.specific ${command} <nameofrequest>
}

SITE SECTIONS {
plugin org.drftpd.commands.sections
class Sections
method doSITE_SECTIONS
perms *
help List the currently defined sections on the site.
help.specific ${command}
help.specific List the currently defined sections on the site.
}

SITE ALUP {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_ALUP
perms *
help Lists the top uploaders of all time
}

SITE ALDN {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_ALDN
perms *
help Lists the top downloaders of all time
}

SITE MONTHUP {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_MONTHUP
perms *
help Lists the top uploaders for the month
}

SITE MONTHDN {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_MONTHDN
perms *
help Lists the top downloaders for the month
}

SITE WKUP {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_WKUP
perms *
help Lists the top uploaders for the week
}

SITE WKDN {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_WKDN
perms *
help Lists the top downloaders for the week
}

SITE DAYUP {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_DAYUP
perms *
help Lists the top uploaders for the day
}

SITE DAYDN {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_DAYDN
perms *
help Lists the top downloaders for the day
}

SITE STATS {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_STATS
perms *
help Show user stats
}

SITE NUKE {
plugin org.drftpd.commands.nuke
class Nuke
method doSITE_NUKE
perms =nuke
help Nuke a directory.
help.specific ${command} <directory> <multiplier> <message>
}

SITE UNNUKE {
plugin org.drftpd.commands.nuke
class Nuke
method doSITE_UNNUKE
perms =nuke
help Unnuke a directory.
help.specific ${command} <directory>
}

SITE NUKES {
plugin org.drftpd.commands.nuke
class Nuke
method doSITE_NUKES
perms *
help List all nuked directories.
}

NOOP {
plugin org.drftpd.commands.dummy
class Dummy
method doDUMMY
perms *
}

CLNT {
plugin org.drftpd.commands.dummy
class Dummy
method doDUMMY
perms *
}

SITE RESCAN {
plugin org.drftpd.commands.zipscript
class ZipscriptCommands
method doSITE_RESCAN
perms *
help sfv scans the files in the current directory.
help.specific ${command} [-r] [force] [delete] - sfv scans the files in the current directory.
help.specific The -r options recursively scans all directories below the current directory as well.
help.specific The force option makes the slave recalculate the checksums.
help.specific The delete option removes bad files rather than just reporting them.
}
